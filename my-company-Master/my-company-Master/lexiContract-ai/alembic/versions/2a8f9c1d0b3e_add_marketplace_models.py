"""add marketplace models

Revision ID: 2a8f9c1d0b3e
Revises: 4e6f3a2b1c9d
Create Date: 2023-12-05 14:30:00.123456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2a8f9c1d0b3e'
down_revision = '4e6f3a2b1c9d' # Placeholder for the previous revision
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    developerappstatus = postgresql.ENUM('development', 'pending_review', 'published', 'rejected', 'archived', name='developerappstatus')
    developerappstatus.create(op.get_bind())

    sandboxenvironmentstatus = postgresql.ENUM('provisioning', 'active', 'suspended', 'deleted', name='sandboxenvironmentstatus')
    sandboxenvironmentstatus.create(op.get_bind())

    op.create_table('developer_apps',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('developer_org_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('client_secret_hash', sa.String(), nullable=False),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('redirect_uris', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.Enum('development', 'pending_review', 'published', 'rejected', 'archived', name='developerappstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['developer_org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_developer_apps_client_id'), 'developer_apps', ['client_id'], unique=True)
    op.create_table('sandbox_environments',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('developer_org_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('subdomain', sa.String(), nullable=False),
    sa.Column('db_connection_string', sa.LargeBinary(), nullable=False),
    sa.Column('status', sa.Enum('provisioning', 'active', 'suspended', 'deleted', name='sandboxenvironmentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['developer_org_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sandbox_environments_subdomain'), 'sandbox_environments', ['subdomain'], unique=True)
    op.create_table('app_installations',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('app_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('customer_org_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('installed_by_user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('installed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['developer_apps.id'], ),
    sa.ForeignKeyConstraint(['customer_org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['installed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('app_installations')
    op.drop_index(op.f('ix_sandbox_environments_subdomain'), table_name='sandbox_environments')
    op.drop_table('sandbox_environments')
    op.drop_index(op.f('ix_developer_apps_client_id'), table_name='developer_apps')
    op.drop_table('developer_apps')
    op.execute("DROP TYPE developerappstatus;")
    op.execute("DROP TYPE sandboxenvironmentstatus;")
    # ### end Alembic commands ###