"""add autonomous redlining fields

Revision ID: 6b3d1a9c8e7f
Revises: 5a1b3c2d4e8f
Create Date: 2023-12-07 11:00:00.123456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6b3d1a9c8e7f'
down_revision = '5a1b3c2d4e8f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    versionstatus = postgresql.ENUM('draft', 'pending_approval', 'approved', 'rejected', name='versionstatus')
    versionstatus.create(op.get_bind())

    op.add_column('analysis_suggestions', sa.Column('confidence_score', sa.Float(), nullable=True))
    op.add_column('analysis_suggestions', sa.Column('is_autonomous', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    
    op.add_column('contract_versions', sa.Column('parent_version_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('contract_versions', sa.Column('version_status', sa.Enum('draft', 'pending_approval', 'approved', 'rejected', name='versionstatus'), nullable=False, server_default='draft'))
    
    op.create_foreign_key('fk_contract_versions_parent_version_id', 'contract_versions', 'contract_versions', ['parent_version_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_contract_versions_parent_version_id', 'contract_versions', type_='foreignkey')
    op.drop_column('contract_versions', 'version_status')
    op.drop_column('contract_versions', 'parent_version_id')
    op.drop_column('analysis_suggestions', 'is_autonomous')
    op.drop_column('analysis_suggestions', 'confidence_score')
    op.execute("DROP TYPE versionstatus;")
    # ### end Alembic commands ###
"""add autonomous redlining fields

Revision ID: 6b3d1a9c8e7f
Revises: 5a1b3c2d4e8f
Create Date: 2023-12-07 11:00:00.123456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6b3d1a9c8e7f'
down_revision = '5a1b3c2d4e8f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    versionstatus = postgresql.ENUM('draft', 'pending_approval', 'approved', 'rejected', name='versionstatus')
    versionstatus.create(op.get_bind())

    op.add_column('analysis_suggestions', sa.Column('confidence_score', sa.Float(), nullable=True))
    op.add_column('analysis_suggestions', sa.Column('is_autonomous', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    
    op.add_column('contract_versions', sa.Column('parent_version_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('contract_versions', sa.Column('version_status', sa.Enum('draft', 'pending_approval', 'approved', 'rejected', name='versionstatus'), nullable=False, server_default='draft'))
    
    op.create_foreign_key('fk_contract_versions_parent_version_id', 'contract_versions', 'contract_versions', ['parent_version_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_contract_versions_parent_version_id', 'contract_versions', type_='foreignkey')
    op.drop_column('contract_versions', 'version_status')
    op.drop_column('contract_versions', 'parent_version_id')
    op.drop_column('analysis_suggestions', 'is_autonomous')
    op.drop_column('analysis_suggestions', 'confidence_score')
    op.execute("DROP TYPE versionstatus;")
    # ### end Alembic commands ###